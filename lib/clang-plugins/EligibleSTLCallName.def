/// ELIGIBLE_STL_CALL is used to enumerate STL call names that are
/// eligible by replacing with AMD Bolt counterpart.

#ifndef ELIGIBLE_STL_CALL
#  define ELIGIBLE_STL_CALL(Name, Header)
#endif

ELIGIBLE_STL_CALL( binary_search		,binary_search.h)
ELIGIBLE_STL_CALL( copy				,copy.h		)
ELIGIBLE_STL_CALL( copy_n			,copy.h 	)	
ELIGIBLE_STL_CALL( count			,count.h	)
ELIGIBLE_STL_CALL( count_if			,count.h 	)
ELIGIBLE_STL_CALL( device_vector		,device_vector.h)
ELIGIBLE_STL_CALL( exclusive_scan		,scan.h 	)
ELIGIBLE_STL_CALL( exclusive_scan_by_key	,scan_by_key.h	)
ELIGIBLE_STL_CALL( fill				,fill.h		)
ELIGIBLE_STL_CALL( fill_n			,fill.h		)
ELIGIBLE_STL_CALL( gather			,gather.h	)
ELIGIBLE_STL_CALL( gather_if			,gather.h	)
ELIGIBLE_STL_CALL( generate			,generate.h	)
ELIGIBLE_STL_CALL( inclusive_scan		,scan.h		)
ELIGIBLE_STL_CALL( inclusive_scan_by_key	,scan_by_key.h	)
ELIGIBLE_STL_CALL( inner_product		,inner_product.h)
ELIGIBLE_STL_CALL( max_element			,max_element.h	)
ELIGIBLE_STL_CALL( merge			,merge.h	)
ELIGIBLE_STL_CALL( min_element			,min_element.h	)
ELIGIBLE_STL_CALL( pair				,pair.h		)
ELIGIBLE_STL_CALL( reduce			,reduce.h	)
ELIGIBLE_STL_CALL( reduce_by_key		,reduce_by_key.h)
ELIGIBLE_STL_CALL( scatter			,scatter.h	)
ELIGIBLE_STL_CALL( scatter_if			,scatter.h	)
ELIGIBLE_STL_CALL( sort				,sort.h		)
ELIGIBLE_STL_CALL( sort_by_key			,sort_by_key.h	)
ELIGIBLE_STL_CALL( stablesort			,stablesort.h	)
ELIGIBLE_STL_CALL( stable_sort_by_key		,stablesort_by_key.h )
ELIGIBLE_STL_CALL( transform			,transform.h	)
ELIGIBLE_STL_CALL( transform_exclusive_scan	,transform_scan.h )
ELIGIBLE_STL_CALL( transform_inclusive_scan	,transform_scan.h )
ELIGIBLE_STL_CALL( transform_reduce		,transform_reduce.h )

#undef ELIGIBLE_STL_CALL
